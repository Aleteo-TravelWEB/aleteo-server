<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.trip.plan.model.mapper.PlanMapper">
	<resultMap type="placeDto" id="place">
		<result column="id" property="id"/>
		<result column="plan_id" property="planId"/>
		<result column="place_id" property="placeId"/>
		<result column="name" property="name"/>
		<result column="address" property="address"/>
		<result column="lat" property="lat"/>
		<result column="lng" property="lng"/>		
		<result column="image_url" property="imageUrl"/>		
	</resultMap>
	
	<resultMap type="planDto" id="plan">
		<result column="id" property="id"/>
		<result column="title" property="title"/>
		<result column="description" property="description"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="user_id" property="userId"/>
		<result column="hit" property="hit"/>
	</resultMap>
	
	<insert id="insertPlan" parameterType="planDto">
		insert into plan(title, description, created_at, updated_at, start_date, end_date, user_id, hit)
		value(#{title}, #{description}, now(), now(), #{startDate}, #{endDate}, #{userId}, ${hit})
	</insert>
	
	<insert id="insertPlace" parameterType="placeDto">
		insert into place(plan_id, place_id, name, address, lat, lng, image_url)
		value(#{planId}, #{placeId}, #{name}, #{address}, #{lat}, #{lng}, #{imageUrl})
	</insert>
	
	<delete id="deletePlan" parameterType="int">
		delete 
		from plan
		where id = ${id}
	</delete>

	<delete id="deletePlace" parameterType="int">
		delete
		from place
		where plan_id = #{planId}
	</delete>
	
	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				and title like concat('%', #{word}, '%')
			</if>
			<if test="key != 'title'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>
	
	<select id="selectPlan" parameterType="map" resultMap="plan">
		select id, title, description, created_at, updated_at, start_date, end_date, user_id, hit
		from plan
		<include refid="search"></include>
		order by id desc
		limit #{start}, #{listsize}
	</select>
	
	<select id="selectPlanList" resultMap="plan">
		select *
		from plan
		order by id desc
	</select>

	<select id="selectPlanOne" parameterType="int" resultMap="plan">
		select id, title, description, created_at, updated_at, start_date, end_date, user_id, hit
		from plan
		where id = #{planId}
	</select>
	
	<select id="selectPlace" parameterType="int" resultMap="place">
		select *
		from place
		where plan_id = #{planId}
		order by id
	</select>
	
	<select id="selectPlanId" parameterType="map" resultType="int">
		select id
		from plan
		where user_id = #{userId} and title = #{title}
	</select>
	
	<update id="updateHit" parameterType="int">
		update plan
		set hit = hit + 1
		where id = #{planId}
	</update>
	
	<update id="updatePlan" parameterType="planDto">
		update plan
		set title = #{title}, description = #{description}, start_date = #{startDate}, end_date = #{endDate}
		where id = ${id}
	</update>
	
	
	<select id="getTotalArticleCount" parameterType="map" resultType="int">
		select count(id)
		from plan
		<where>
			<include refid="search"></include>
		</where>
	</select>
	
	<select id="getTotalPlaceCount" parameterType="int" resultType="int">
		select count(id)
		from place
		where plan_id = #{planId}
	</select>

	<select id="getGoodPlanNum" parameterType="map" resultType="int">
		select count(plan_id)
		from good_plan
		where user_id = #{userId} and plan_id = ${planId}
	</select>

	<select id="getGoodPlan" parameterType="string" resultType="map">
		select p.id, p.title, p.created_at, p.start_date, p.end_date, p.user_id, p.hit, gp.created_at as gp_created_at
		from plan p
		left join good_plan gp
		on p.id = gp.plan_id
		where gp.user_id = #{userId}
		order by gp.created_at desc;
	</select>

	<insert id="insertGoodPlan" parameterType="goodPlanDto">
		insert
		into good_plan (user_id, plan_id, created_at)
		values (#{userId}, #{planId}, now())
	</insert>

	<delete id="deleteGoodPlan" parameterType="map" >
		delete
		from good_plan
		where user_id = #{userId} and plan_id = ${planId}
	</delete>
	
</mapper>